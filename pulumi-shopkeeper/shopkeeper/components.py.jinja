{# 
ðŸ¦¾ Jinja template for generating Shopkeeper Component Resources

Requires:
 - components: [{component_module: str, args_type_name: str}]

#}
#
# DO NOT EDIT! Code is generated by component_factory.py

from typing import Any, Optional

from pulumi import ComponentResource, Output, ResourceOptions

{# Group components by component_module and render imports #}
{% for module, items in components|groupby('component_module') %}
from {{ module }} import {{ items|map(attribute='args_type_name')|unique|join(', ') }}
{% endfor %}

{% for component in components %}
class {{component.component_name}}(ComponentResource):
    market_data: Output[Any]

    def __init__(
        self,
        name: str,
        args: {{component.args_type_name}},
        opts: Optional[ResourceOptions] = None,
    ):
        super().__init__(
            "pulumi-shopkeeper:index:{{component.component_name}}",
            name,
            props={},
            opts=opts,
        )
        self.market_data = {"berry": "blue"}
        self.register_outputs({"marketData": self.market_data})


{% endfor %}

components = [
{% for component in components %}
    {{ component.component_name }},
{% endfor %}
]